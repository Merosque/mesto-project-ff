{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/cards.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export const initialCards = [\r\n    {\r\n      name: \"Архыз\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n      alt: \"зеленые горы с озером\",\r\n    },\r\n    {\r\n      name: \"Челябинская область\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n      alt: \"река весной с заснеженными берегами\",\r\n    },\r\n    {\r\n      name: \"Иваново\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n      alt: \"панельные дома с горящими окнами вечером\",\r\n    },\r\n    {\r\n      name: \"Камчатка\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n      alt: \"тундра с низкой растительностью на фоне гор Камчатки\",\r\n    },\r\n    {\r\n      name: \"Холмогорский район\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n      alt: \"железнодорожная ветка в лесу\",\r\n    },\r\n    {\r\n      name: \"Байкал\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n      alt: \"прибрежная скала и заледеневший берег озера\",\r\n    }\r\n];","// Найдём все попапы для закрытия по клику на оверлей или на крестик\r\nconst popups = document.querySelectorAll('.popup');\r\n\r\n// Функция открытия попапа \r\nfunction openPopup(popup) {\r\n  popup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', handleEscClose);\r\n}\r\n\r\n// Функция закрытия попапа \r\nfunction closePopup(popup) {\r\n  popup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', handleEscClose);\r\n}\r\n\r\n// Закрытие попапа по клавише Escape \r\nfunction handleEscClose(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const openedPopup = document.querySelector('.popup_is-opened');\r\n    if (openedPopup) {\r\n      closePopup(openedPopup);\r\n    }\r\n  }\r\n}\r\n\r\n// Закрытие попапа по клику на крестик \r\npopups.forEach((popup) => {\r\n  const closeButton = popup.querySelector('.popup__close');\r\n  if (closeButton) {\r\n    closeButton.addEventListener('click', () => closePopup(popup));\r\n  }\r\n});\r\n\r\nexport { closePopup, openPopup, popups };","import { openPopup } from './modal.js';\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\nconst imagePopup = document.querySelector('.popup_type_image');\r\nconst popupImage = imagePopup.querySelector('.popup__image');\r\nconst popupCaption = imagePopup.querySelector('.popup__caption');\r\n\r\n// Функция удаления карточки\r\nfunction handleDeleteCard(evt) {\r\n  const eventTarget = evt.target;\r\n  eventTarget.closest('.places__item').remove();\r\n}\r\n\r\n// Функция копирования клонированного шаблона карточки\r\nfunction getCardTemplate() {\r\n  return cardTemplate.querySelector('.places__item').cloneNode(true);\r\n}\r\n\r\n//Функция лайка карточки\r\nfunction handleLikeClick(evt) {\r\n  evt.target.classList.toggle('card__like-button_is-active');\r\n}\r\n\r\n// Функция открытия попапа изображения по клику на изображение карточки\r\nfunction handleImageClick(element) {\r\n  popupImage.src = element.link;\r\n  popupImage.alt = element.alt;\r\n  popupCaption.textContent = element.alt;\r\n  openPopup(imagePopup);\r\n}\r\n\r\n// Функция создания карточки\r\nfunction createCard(element, handleLikeClick, handleDeleteCard, handleImageClick) {\r\n  const cardElement = getCardTemplate();\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const cardTitle = cardElement.querySelector('.card__title');\r\n  const deleteButton = cardElement.querySelector('.card__delete-button');\r\n  const likeButton = cardElement.querySelector('.card__like-button');\r\n\r\n  cardImage.src = element.link;\r\n  cardImage.alt = element.alt;\r\n  cardTitle.textContent = element.name;\r\n  \r\n  cardImage.addEventListener('click', () => handleImageClick(element));\r\n  deleteButton.addEventListener('click', handleDeleteCard);\r\n  likeButton.addEventListener('click', handleLikeClick);\r\n\r\n  return cardElement;\r\n}\r\n\r\nexport { createCard, handleLikeClick, handleDeleteCard, handleImageClick };\r\n","import './pages/index.css';\r\nimport { initialCards } from './cards.js';\r\nimport { closePopup, openPopup, popups } from \"./components/modal.js\";\r\nimport { createCard, handleLikeClick, handleDeleteCard, handleImageClick } from './components/card.js'; // импорт логики карточек\r\n\r\n//значения имени и занятия по дефолту в профиле\r\nconst profileName = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\n\r\n//кнопки\r\nconst editButton = document.querySelector('.profile__edit-button');\r\nconst editPopup = document.querySelector('.popup_type_edit');\r\nconst newCardPopup = document.querySelector('.popup_type_new-card');\r\nconst addCardButton = document.querySelector('.profile__add-button');\r\n\r\n//DOM элемент списка мест\r\nconst placesList = document.querySelector('.places__list');\r\n\r\n// Функция добавления карточки в начало\r\nfunction renderCard(dataAboutPlace) {\r\n  const readyCard = createCard(dataAboutPlace, handleLikeClick, handleDeleteCard,\r\n  handleImageClick);\r\n  placesList.prepend(readyCard); // Добавляем в начало\r\n}\r\n\r\n// Отрисовка стартовых карточек\r\ninitialCards.forEach(renderCard);\r\n\r\n// Находим формы в DOM\r\nconst formElementEditProfile = document.querySelector(\".popup__form[name='edit-profile']\");\r\nconst formElementAddCard = document.querySelector(\".popup__form[name='new-place']\");\r\n\r\n// Находим поля формы в DOM\r\nconst userNameInput = document.querySelector('.popup__input_type_name');\r\nconst placeNameInput = document.querySelector('.popup__input_type_card-name');\r\nconst jobInput = document.querySelector('.popup__input_type_description');\r\nconst placeLinkInput = document.querySelector('.popup__input_type_url');\r\n\r\n//Обработчик открытия формы редактирования профиля и подставка дефолтных значений\r\nconst handleEditProfileDefaultValue = () => {\r\n  userNameInput.value = profileName.textContent;\r\n  jobInput.value = profileDescription.textContent;\r\n  openPopup(editPopup);\r\n};\r\n\r\n//Обработчик открытия формы добавления новой карточки\r\nconst handleAddCard = () => {\r\n  formElementAddCard.reset(); // сбрасываем поля\r\n  openPopup(newCardPopup);\r\n};\r\n\r\n// Прикрепляем обработчик открытия формы к кнопке добавить новую карточку\r\naddCardButton.addEventListener('click', handleAddCard);\r\n\r\n// Прикрепляем обработчик открытия формы к кнопке редактировать профиль\r\neditButton.addEventListener(\"click\", handleEditProfileDefaultValue);\r\n\r\n// Обработчик отправки формы редактирования профиля\r\nfunction handleFormSubmitEditProfile(evt) {\r\n  evt.preventDefault(); // Эта строчка отменяет стандартную отправку формы.\r\n  const userJob = jobInput.value;\r\n  const userName = userNameInput.value;\r\n  profileDescription.textContent = userJob;\r\n  profileName.textContent = userName;\r\n  closePopup(editPopup);\r\n}\r\n\r\n// Прикрепляем обработчик отправки к кнопке \"сохранить\" формы редактирования профиля\r\nformElementEditProfile.addEventListener('submit', handleFormSubmitEditProfile);\r\n\r\n// Обработчик отправки формы добавления карточки\r\nfunction handleFormSubmitAddCard(evt) {\r\n  evt.preventDefault(); // Эта строчка отменяет стандартную отправку формы.\r\n  const userPlaceName = placeNameInput.value;\r\n  const userPlaceUrl = placeLinkInput.value;\r\n\r\n  renderCard({\r\n    name: userPlaceName,\r\n    link: userPlaceUrl,\r\n    alt: userPlaceName\r\n  },\r\n  \r\n  handleLikeClick,\r\n  handleDeleteCard,\r\n  handleImageClick\r\n);\r\n\r\n  formElementAddCard.reset();\r\n  closePopup(newCardPopup);\r\n}\r\n\r\n// Прикрепляем обработчик отправки к кнопке \"сохранить\" формы добавления карточки\r\nformElementAddCard.addEventListener('submit', handleFormSubmitAddCard);\r\n\r\n// Закрытие попапа по клику на оверлей\r\npopups.forEach((popup) => {\r\n  popup.addEventListener('mousedown', (evt) => {\r\n    if (evt.target === popup) {\r\n      closePopup(popup);\r\n    }\r\n  })\r\n});\r\n\r\n\r\n"],"names":["popups","document","querySelectorAll","openPopup","popup","classList","add","addEventListener","handleEscClose","closePopup","remove","removeEventListener","evt","key","openedPopup","querySelector","forEach","closeButton","cardTemplate","content","imagePopup","popupImage","popupCaption","handleDeleteCard","target","closest","handleLikeClick","toggle","handleImageClick","element","src","link","alt","textContent","profileName","profileDescription","editButton","editPopup","newCardPopup","addCardButton","placesList","renderCard","dataAboutPlace","readyCard","cardElement","cloneNode","cardImage","cardTitle","deleteButton","likeButton","name","createCard","prepend","formElementEditProfile","formElementAddCard","userNameInput","placeNameInput","jobInput","placeLinkInput","reset","value","preventDefault","userJob","userName","userPlaceName"],"sourceRoot":""}